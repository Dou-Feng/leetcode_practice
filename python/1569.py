from typing import List
# from tool_utils import lru_cache




class Solution:
    def numOfWays(self, nums: List[int]) -> int:
        n = len(nums)
        MOD = 10**9 + 7
        C = [[0] * (n+1) for _ in range(n+1)]
        # C[0][0] = 0
        for i in range(n+1):
            for j in range(i+1):
                if j == 0:
                    C[i][j] = 1
                else:
                    C[i][j] = (C[i-1][j-1] + C[i-1][j]) % MOD
                    # print(i, j, C[i][j])
        
        def dfs(sub_nums):
            if len(sub_nums) == 1 or not sub_nums:
                return 1
            large = []
            smaller = []
            for i in range(1, len(sub_nums)):
                if sub_nums[i] > sub_nums[0]:
                    large.append(sub_nums[i])
                else:
                    smaller.append(sub_nums[i])
            fs, fl = dfs(large), dfs(smaller)
            ln, sn = len(large), len(smaller)
            # debug = "C[" + str(len(sub_nums) - 1) + "][" + str(max(ln,sn)) + "] = " + str(C[len(sub_nums) - 1][max(ln,sn)])
            # print(debug)
            return (C[len(sub_nums) - 1][ln] * fs) % MOD * fl % MOD
        
        # print(C[5][2])
        # print(C[5][4])
        return dfs(nums) - 1

sol = Solution()
print(sol.numOfWays([9,4,2,1,3,6,5,7,8,14,11,10,12,13,16,15,17,18]))
print(sol.numOfWays([3,4,5,1,2]))

print(sol.numOfWays([168,129,162,253,312,311,71,61,275,193,105,146,124,155,48,142,223,99,224,258,325,367,40,24,57,94,386,340,185,364,187,252,46,203,299,13,72,30,379,389,20,184,377,331,406,119,338,149,309,272,281,344,42,219,175,210,217,296,97,395,326,401,267,405,201,382,221,292,1,341,402,314,171,81,209,60,92,169,160,202,273,163,153,335,49,15,189,77,427,84,89,95,248,196,10,66,254,151,256,285,108,199,289,6,91,4,16,174,182,17,318,45,352,123,173,195,154,68,88,12,270,234,370,205,28,362,372,211,228,348,306,358,424,109,398,34,249,63,111,14,212,179,19,56,198,238,291,403,351,417,387,53,43,38,37,419,115,287,82,316,73,385,103,51,80,357,197,62,116,349,284,104,176,411,416,167,225,374,132,269,192,150,117,159,70,131,135,128,5,333,381,334,136,392,147,298,230,320,79,172,216,391,191,130,375,112,140,408,363,148,262,413,274,255,280,414,133,243,144,98,106,227,246,251,322,18,420,190,350,418,138,388,380,368,378,303,247,421,399,134,152,90,164,277,55,220,366,64,304,384,102,231,76,347,181,244,214,67,145,423,158,114,329,294,137,353,422,31,233,2,412,157,396,245,232,121,25,343,180,78,215,222,96,321,297,85,65,207,301,400,266,52,101,313,27,141,360,308,394,29,263,229,404,36,319,307,323,188,376,204,39,290,328,235,237,261,50,239,143,242,21,336,361,22,186,356,288,206,342,369,75,161,58,218,47,332,200,8,156,74,300,126,226,371,324,428,87,354,113,295,283,286,44,282,54,139,3,41,410,170,264,383,107,250,259,23,194,271,407,279,118,415,83,236,327,317,409,9,355,278,35,359,265,86,346,165,310,11,315,93,330,425,69,241,302,110,339,397,127,178,26,293,125,213,268,260,122,177,166,257,365,276,240,59,32,373,337,7,183,345,120,305,393,390,208,426,100,33]))

